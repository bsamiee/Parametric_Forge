# Title         : config
# Author        : Bardia Samiee
# Project       : Parametric Forge
# License       : MIT
# Path          : 01.home/00.core/configs/media/ffmpeg/config
# ----------------------------------------------------------------------------
# FFmpeg multimedia processing configuration with presets and optimizations

# --- Global Settings --------------------------------------------------------
# Default log level (quiet, panic, fatal, error, warning, info, verbose, debug, trace)
-loglevel warning

# Overwrite output files without asking
-y

# Hide banner
-hide_banner

# Show progress
-stats

# --- Hardware Acceleration --------------------------------------------------
# Enable hardware acceleration (varies by platform)
# macOS: VideoToolbox
# -hwaccel videotoolbox
# -hwaccel_output_format videotoolbox_vld

# Linux: VAAPI
# -hwaccel vaapi
# -hwaccel_output_format vaapi
# -hwaccel_device /dev/dri/renderD128

# NVIDIA: NVENC/NVDEC
# -hwaccel cuda
# -hwaccel_output_format cuda

# Intel: Quick Sync Video
# -hwaccel qsv
# -hwaccel_output_format qsv

# --- Video Encoding Presets -------------------------------------------------
# H.264 encoding with good quality/size balance
# -c:v libx264
# -preset medium
# -crf 23
# -profile:v high
# -level 4.1
# -pix_fmt yuv420p

# H.265/HEVC encoding for better compression
# -c:v libx265
# -preset medium
# -crf 28
# -profile:v main
# -pix_fmt yuv420p

# VP9 encoding for web
# -c:v libvpx-vp9
# -crf 30
# -b:v 0
# -row-mt 1
# -tile-columns 2
# -tile-rows 1

# AV1 encoding (next-generation codec)
# -c:v libaom-av1
# -crf 30
# -b:v 0
# -cpu-used 4
# -row-mt 1
# -tile-columns 2
# -tile-rows 1

# --- Audio Encoding Presets -------------------------------------------------
# AAC encoding (most compatible)
# -c:a aac
# -b:a 128k
# -ar 48000
# -ac 2

# Opus encoding (better quality at low bitrates)
# -c:a libopus
# -b:a 96k
# -ar 48000
# -ac 2

# MP3 encoding (legacy compatibility)
# -c:a libmp3lame
# -b:a 192k
# -ar 44100
# -ac 2

# --- Video Filters ----------------------------------------------------------
# Scale video to specific resolution
# -vf scale=1920:1080

# Scale video maintaining aspect ratio
# -vf scale=1920:-2

# Deinterlace video
# -vf yadif

# Denoise video
# -vf hqdn3d

# Sharpen video
# -vf unsharp=5:5:1.0:5:5:0.0

# Color correction
# -vf eq=brightness=0.1:contrast=1.2:saturation=1.1

# Crop video
# -vf crop=1920:800:0:140

# Add letterbox/pillarbox
# -vf pad=1920:1080:(ow-iw)/2:(oh-ih)/2:black

# Rotate video
# -vf transpose=1  # 90 degrees clockwise
# -vf transpose=2  # 90 degrees counter-clockwise
# -vf transpose=3  # 180 degrees

# --- Audio Filters ----------------------------------------------------------
# Normalize audio volume
# -af loudnorm

# Apply audio compression
# -af acompressor=threshold=0.089:ratio=9:attack=200:release=1000

# High-pass filter (remove low frequencies)
# -af highpass=f=80

# Low-pass filter (remove high frequencies)
# -af lowpass=f=15000

# Audio fade in/out
# -af afade=t=in:ss=0:d=3,afade=t=out:st=57:d=3

# --- Format-Specific Settings -----------------------------------------------
# MP4 container settings
# -movflags +faststart  # Enable progressive download
# -brand mp42           # Set brand for compatibility

# WebM container settings
# -f webm
# -dash 1               # Enable DASH streaming

# MKV container settings
# -f matroska

# --- Streaming Settings -----------------------------------------------------
# RTMP streaming
# -f flv
# -c:v libx264
# -preset veryfast
# -maxrate 2500k
# -bufsize 5000k
# -g 50
# -c:a aac
# -b:a 128k
# -ar 44100
# -f flv rtmp://live.twitch.tv/live/YOUR_STREAM_KEY

# HLS streaming
# -f hls
# -hls_time 10
# -hls_list_size 0
# -hls_segment_filename segment%03d.ts
# playlist.m3u8

# --- Quality Settings -------------------------------------------------------
# Constant Rate Factor (CRF) values:
# 0 = lossless
# 18-23 = visually lossless to high quality
# 23-28 = good quality (default range)
# 28+ = lower quality, smaller files

# Two-pass encoding for precise bitrate control
# Pass 1: -pass 1 -an -f null /dev/null
# Pass 2: -pass 2

# --- Performance Optimization -----------------------------------------------
# Multi-threading
# -threads 0            # Use all available CPU cores

# Memory optimization
# -max_muxing_queue_size 1024

# I/O optimization
# -fflags +genpts       # Generate presentation timestamps

# --- Subtitle Settings ------------------------------------------------------
# Burn subtitles into video
# -vf subtitles=input.srt

# Copy subtitle streams
# -c:s copy

# Convert subtitle format
# -c:s srt

# --- Metadata Settings ------------------------------------------------------
# Set metadata
# -metadata title="My Video"
# -metadata artist="My Name"
# -metadata date="2024"
# -metadata comment="Created with FFmpeg"

# Copy all metadata
# -map_metadata 0

# Remove all metadata
# -map_metadata -1

# --- Advanced Options -------------------------------------------------------
# Seek to specific time
# -ss 00:01:30          # Start from 1 minute 30 seconds
# -t 00:05:00           # Duration of 5 minutes
# -to 00:06:30          # End at 6 minutes 30 seconds

# Frame rate control
# -r 30                 # Set output frame rate
# -vsync cfr            # Constant frame rate

# Keyframe interval
# -g 250                # GOP size (keyframe every 250 frames)
# -keyint_min 25        # Minimum keyframe interval

# B-frames
# -bf 3                 # Number of B-frames
# -b_strategy 2         # B-frame strategy

# --- Error Handling ---------------------------------------------------------
# Continue on errors
# -xerror

# Maximum error rate
# -max_error_rate 0.1

# Abort on empty output
# -abort_on empty_output

# --- Platform-Specific Optimizations ---------------------------------------
# macOS optimizations
# -threads 0
# -hwaccel videotoolbox

# Linux optimizations
# -threads 0
# -hwaccel vaapi

# Windows optimizations
# -threads 0
# -hwaccel dxva2

# --- Common Use Cases -------------------------------------------------------
# Convert video format
# ffmpeg -i input.avi -c:v libx264 -c:a aac output.mp4

# Extract audio from video
# ffmpeg -i input.mp4 -vn -c:a copy output.aac

# Create video from images
# ffmpeg -framerate 30 -i img%03d.png -c:v libx264 -pix_fmt yuv420p output.mp4

# Concatenate videos
# ffmpeg -f concat -safe 0 -i filelist.txt -c copy output.mp4

# Create thumbnail
# ffmpeg -i input.mp4 -ss 00:01:00 -vframes 1 -q:v 2 thumbnail.jpg

# Resize video
# ffmpeg -i input.mp4 -vf scale=1280:720 -c:a copy output.mp4

# Convert to GIF
# ffmpeg -i input.mp4 -vf "fps=10,scale=320:-1:flags=lanczos,palettegen" palette.png
# ffmpeg -i input.mp4 -i palette.png -filter_complex "fps=10,scale=320:-1:flags=lanczos[x];[x][1:v]paletteuse" output.gif

# Screen recording (macOS)
# ffmpeg -f avfoundation -i "1:0" -c:v libx264 -preset ultrafast -c:a aac screen_recording.mp4

# Screen recording (Linux)
# ffmpeg -f x11grab -s 1920x1080 -i :0.0 -c:v libx264 -preset ultrafast screen_recording.mp4

# --- Quality Profiles -------------------------------------------------------
# Ultra High Quality (large files)
# -c:v libx264 -preset veryslow -crf 18 -c:a flac

# High Quality (balanced)
# -c:v libx264 -preset medium -crf 20 -c:a aac -b:a 192k

# Standard Quality (good compression)
# -c:v libx264 -preset fast -crf 23 -c:a aac -b:a 128k

# Low Quality (small files)
# -c:v libx264 -preset veryfast -crf 28 -c:a aac -b:a 96k

# Web Optimized
# -c:v libx264 -preset fast -crf 23 -maxrate 1M -bufsize 2M -c:a aac -b:a 128k -movflags +faststart