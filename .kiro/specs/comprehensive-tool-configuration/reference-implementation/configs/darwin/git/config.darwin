# Title         : config.darwin
# Author        : Bardia Samiee
# Project       : Parametric Forge
# License       : MIT
# Path          : configs/darwin/git/config.darwin
# ----------------------------------------------------------------------------
# macOS-specific Git configuration

[core]
    # Use macOS keychain for credential storage
    askpass = 
    
    # macOS-specific editor (if not set globally)
    editor = nvim
    
    # macOS-specific pager with color support
    pager = less -R
    
    # Disable creation of .DS_Store files in repositories
    excludesfile = ~/.config/git/ignore.darwin

[credential]
    # Use macOS Keychain for credential storage
    helper = osxkeychain
    
    # Use 1Password CLI for credential management (if available)
    # helper = !op item get --field password

[diff]
    # Use macOS-specific diff tool
    tool = opendiff
    
    # Enable color in diff output
    colorMoved = default

[difftool "opendiff"]
    cmd = opendiff \"$LOCAL\" \"$REMOTE\" -merge \"$MERGED\"

[merge]
    # Use macOS-specific merge tool
    tool = opendiff

[mergetool "opendiff"]
    cmd = opendiff \"$LOCAL\" \"$REMOTE\" -ancestor \"$BASE\" -merge \"$MERGED\"
    trustExitCode = true

[gpg]
    # Use SSH signing with 1Password (if available)
    format = ssh
    
[gpg "ssh"]
    # 1Password SSH signing program
    program = /Applications/1Password.app/Contents/MacOS/op-ssh-sign

[commit]
    # Enable GPG signing by default (uncomment if desired)
    # gpgsign = true

[tag]
    # Enable GPG signing for tags (uncomment if desired)
    # gpgsign = true

[url "git@github.com:"]
    # Use SSH for GitHub (works better with 1Password SSH agent)
    insteadOf = https://github.com/

[url "git@gitlab.com:"]
    # Use SSH for GitLab (works better with 1Password SSH agent)
    insteadOf = https://gitlab.com/

[filter "lfs"]
    # Git LFS configuration
    clean = git-lfs clean -- %f
    smudge = git-lfs smudge -- %f
    process = git-lfs filter-process
    required = true

[color]
    # Enable color output
    ui = auto
    
[color "diff"]
    # macOS Terminal.app compatible colors
    meta = yellow bold
    frag = magenta bold
    old = red bold
    new = green bold
    whitespace = red reverse

[color "status"]
    # Status colors for macOS terminal
    added = green
    changed = yellow
    untracked = red

[alias]
    # macOS-specific aliases
    browse = !open $(git remote get-url origin | sed 's/git@github.com:/https:\\/\\/github.com\\//' | sed 's/\\.git$//')
    finder = !open $(git rev-parse --show-toplevel)
    
    # Useful aliases for development
    st = status -s
    co = checkout
    br = branch
    ci = commit
    unstage = reset HEAD --
    last = log -1 HEAD
    visual = !gitk
    
    # macOS notification integration (if terminal-notifier is available)
    notify = !f() { git "$@" && terminal-notifier -message "Git command completed: $*" -title "Git"; }; f

[push]
    # Default push behavior
    default = simple
    
    # Automatically set up remote tracking
    autoSetupRemote = true

[pull]
    # Use rebase by default for cleaner history
    rebase = true

[init]
    # Default branch name
    defaultBranch = main

[fetch]
    # Automatically prune deleted remote branches
    prune = true

[rebase]
    # Automatically stash and unstash changes during rebase
    autoStash = true

[rerere]
    # Remember how merge conflicts were resolved
    enabled = true

[help]
    # Automatically run suggested commands after a delay
    autocorrect = 1

[log]
    # Show dates in relative format
    date = relative

[status]
    # Show untracked files in directories
    showUntrackedFiles = all

[transfer]
    # Verify received objects
    fsckobjects = true

[receive]
    # Verify pushed objects
    fsckObjects = true

[fetch]
    # Verify fetched objects
    fsckobjects = true