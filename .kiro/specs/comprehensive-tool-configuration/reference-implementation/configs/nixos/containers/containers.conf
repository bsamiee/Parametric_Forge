# Title         : containers.conf
# Author        : Bardia Samiee
# Project       : Parametric Forge
# License       : MIT
# Path          : configs/nixos/containers/containers.conf
# ----------------------------------------------------------------------------
# Podman container runtime configuration for Linux

[containers]
# Default user namespace mode for rootless containers
userns = "keep-id"

# Default network mode
netns = "bridge"

# Default logging driver (journald integrates with systemd)
log_driver = "journald"

# Default log size limit
log_size_max = "10MB"

# Default security options
seccomp_profile = "/usr/share/containers/seccomp.json"
apparmor_profile = "containers-default-0.44.0"

# Default capabilities (minimal set for security)
default_capabilities = [
    "CHOWN",
    "DAC_OVERRIDE", 
    "FOWNER",
    "FSETID",
    "KILL",
    "NET_BIND_SERVICE",
    "SETFCAP",
    "SETGID",
    "SETPCAP",
    "SETUID",
    "SYS_CHROOT"
]

# Default ulimits
default_ulimits = [
    "nofile=65536:65536",
    "nproc=4096:4096"
]

# Container init process
init = true
init_path = "/run/current-system/sw/bin/catatonit"

# Use local timezone
tz = "local"

# Default environment variables
env = [
    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
    "TERM=xterm-256color"
]

# Default volumes
volumes = [
    "/tmp:/tmp:rw,noexec,nosuid,nodev"
]

# Default annotations
annotations = [
    "io.containers.autoupdate=registry"
]

[engine]
# Container engine configuration
runtime = "crun"
runtime_path = "/run/current-system/sw/bin/crun"

# Image storage and transport
image_default_transport = "docker://"
image_parallel_copies = 0

# Network configuration
network_cmd_path = "/run/current-system/sw/bin/netavark"
network_cmd_options = []

# Volume configuration
volume_path = "/var/lib/containers/storage/volumes"

# Events logging
events_logger = "journald"

# Container engine database
database_backend = "sqlite"

# Image signature verification
image_default_format = "oci"
image_copy_tmp_dir = "/var/tmp"

# Pull policy
pull_policy = "missing"

# Runtime configuration
runtime_supports_json = ["crun", "runc", "kata", "runsc"]
runtime_supports_kvm = ["kata"]
runtime_supports_nocgroups = ["crun", "runc"]

# Service timeout
service_timeout = 5

# Stop timeout
stop_timeout = 10

# Exit command delay
exit_command_delay = 5

[network]
# Network configuration
network_backend = "netavark"
dns_bind_port = 53

# Default network
default_network = "podman"
default_subnet = "10.88.0.0/16"
default_subnet_pools = [
    {"base" = "10.89.0.0/16", "size" = 24},
    {"base" = "10.90.0.0/15", "size" = 24}
]

# Network configuration directory
network_config_dir = "/etc/containers/networks"

[secrets]
# Secrets configuration
driver = "file"

[machine]
# Machine configuration (for podman machine on non-Linux systems)
cpus = 2
memory = 2048
disk_size = 20
image = "testing"
user = "core"
provider = "qemu"

# Connection settings
connection_timeout = 5
ssh_port = 22

[farms]
# Container farms configuration (for distributed container management)
default = ""

[compose]
# Docker Compose compatibility
compose_providers = ["docker-compose", "podman-compose"]
compose_warning_logs = true