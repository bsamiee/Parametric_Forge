;; Title         : karabiner.edn
;; Author        : Bardia Samiee
;; Project       : Parametric Forge
;; License       : MIT
;; Path          : /01.home/00.core/configs/apps/karabiner/karabiner.edn
;; ----------------------------------------------------------------------------
;; Goku (GokuRakuJoudo) source-of-truth for Karabiner-Elements.
;; Foundation only: leaders and scaffolding, no app-specific binds yet.
;; Leaders (implemented here):
;;   - Hyper  (Right Command) -> ⌘⌥⌃⇧ (cmd+opt+ctrl+shift)
;;   - Super  (Right Option)  -> ⌘⌥⌃   (cmd+opt+ctrl)
;;   - Power  (Right Shift)   ->  ⌥⌃⇧   (opt+ctrl+shift)
;; Notes:
;;   - We keep behavior simple (no to_if_alone).
;;   - Clean scaffold for layers (:simlayers) & per-app (:applications) is provided.

{:profiles
 {:Default {:default true
            :alone   300     ;; to_if_alone timeout (ms)
            :held    500     ;; to_if_held_down threshold (ms)
            :sim     50}}     ;; simultaneous_threshold (ms)

 ;; Optional shell templates (useful when adding app/window/hs actions later)
 :templates
 {:sh ["/usr/bin/env" "sh" "-lc" "%s"]
  :yabai ["/usr/bin/env" "sh" "-lc" "yabai -m %s"]
  :hs    ["/usr/bin/env" "open" "-g" "hammerspoon://%s"]}

 ;; Modifiers legend (for readability in rules)
 ;; C=cmd, O=opt, T=ctrl, S=shift (left side by default)
 ;; Use :!COTS<key> to emit key with all modifiers. Example: :!CTSleft_option means ctrl+shift+left_option

 ;; Layers scaffold (empty): define modal layers here, e.g. {:nav {:key :spacebar}}
 :simlayers {}

 :main
[{:des  "LEADERS — Right-side physical keys → chords"
   :rules [
    ;; Right Command → Hyper (⌘⌥⌃⇧). We emit a left_shift with COT modifiers to get all four.
    [:##right_command [[:hs "forge/leader?name=hyper&down=1"] :!COTleft_shift] nil {:afterup [[:hs "forge/leader?name=hyper&down=0"]]}]

    ;; Right Option → Super (⌘⌥⌃)
    [:##right_option [[:hs "forge/leader?name=super&down=1"] :!CTleft_option] nil {:afterup [[:hs "forge/leader?name=super&down=0"]]}]

    ;; Right Shift → Power (⌥⌃⇧)
    [:##right_shift [[:hs "forge/leader?name=power&down=1"] :!TSleft_option] nil {:afterup [[:hs "forge/leader?name=power&down=0"]]}]
   ]}

  ;; LAYERS — add layer-based rules under :simlayers and here as needed.
  {:des  "LAYERS — placeholder (add :simlayers and rules as needed)"
   :rules [
    ;; Example (uncomment when you add a layer):
    ;; [:nav :left_arrow :left]
    ;; [:nav :right_arrow :right]
   ]}

  ;; APPS — add app-conditional rules as separate blocks when needed.
  {:des  "APPS — placeholder (add app-conditional rules here)"
   :rules [
    ;; Example per-app rule (uncomment and define :applications below):
    ;; [:!CT1 [:yabai "space --focus 1"] :vscode]
   ]}]

 ;; Placeholders for future per-app conditions
 :applications {}
}
