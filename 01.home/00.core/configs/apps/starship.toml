# Title         : starship.toml
# Author        : Bardia Samiee  
# Project       : Parametric Forge
# License       : MIT
# Path          : /01.home/00.core/configs/apps/starship.toml
# ----------------------------------------------------------------------------
# Clean Starship: Nerd Font Symbols preset + Balanced Dracula colors

"$schema" = 'https://starship.rs/config-schema.json'

add_newline = true
command_timeout = 800
scan_timeout = 50
continuation_prompt = "┆ "

format = """
$directory\
$git_branch\
$git_status\
$git_commit\
$python\
$nodejs\
$rust\
$golang\
$nix_shell\
$docker_context\
$kubernetes\
$package\
$jobs\
$character"""

right_format = """$cmd_duration"""

palette = 'dracula'

[aws]
symbol = "  "
style = "bold orange"
format = "[$symbol($profile )(\\($region\\)) [$duration]]($style) "
expiration_symbol = "󰅙 "
force_display = false

[buf]
symbol = " "

[bun]
symbol = " "

[c]
symbol = " "

[cpp]
symbol = " "

[cmake]
symbol = " "

[conda]
symbol = " "

[crystal]
symbol = " "

[dart]
symbol = " "

[deno]
symbol = " "

[directory]
read_only = " 󰌾"
style = "bold purple"
truncation_length = 3
truncate_to_repo = true
home_symbol = "~"
truncation_symbol = "…/"
fish_style_pwd_dir_length = 1

[directory.substitutions]
"Documents" = "󰈙 "
"Downloads" = " "
"Music" = "󰝚 "
"Pictures" = " "
"Videos" = " "
"Desktop" = "󰇄 "
"Applications" = "󰀶 "
"Library" = " "
"Developer" = " "
".config" = " "
".ssh" = "󰢤 "
".git" = " "

[docker_context]
symbol = " "
style = "bold cyan"
format = "[$symbol$context]($style) "
only_with_files = true
detect_extensions = []
detect_files = ["docker-compose.yml", "docker-compose.yaml", "Dockerfile"]
detect_folders = []

[elixir]
symbol = " "

[elm]
symbol = " "

[fennel]
symbol = " "

[fossil_branch]
symbol = " "

[gcloud]
symbol = "  "

[git_branch]
symbol = " "
style = "bold pink"
format = "[$symbol$branch(:$remote_branch)]($style) "
truncation_length = 20
truncation_symbol = "…"
only_attached = false

[git_status]
style = "bold orange"
format = '[\[$all_status$ahead_behind\]]($style) '
ahead = "󰜷${count}"
behind = "󰜮${count}"
diverged = "󰹺󰜷${ahead_count}󰜮${behind_count}"
untracked = "?${count}"
stashed = "󰏗${count}"
modified = "!${count}"
staged = "+${count}"
renamed = "»${count}"
deleted = "✘${count}"
conflicted = "=${count}"

[git_commit]
tag_symbol = ' 󰓹 '
commit_hash_length = 8
style = "bold purple"
format = "[\\($hash$tag\\)]($style) "
only_detached = true

[git_state]
format = '\([$state( $progress_current/$progress_total)]($style)\) '
style = "bright-black"

[golang]
symbol = " "
format = "[$symbol($version )]($style)"
style = "bold cyan"
detect_extensions = ["go"]
detect_files = ["go.mod", "go.sum"]

[guix_shell]
symbol = " "

[haskell]
symbol = " "

[haxe]
symbol = " "

[hg_branch]
symbol = " "


[java]
symbol = " "

[julia]
symbol = " "

[kotlin]
symbol = " "

[lua]
symbol = " "

[memory_usage]
threshold = 75
symbol = "󰍛 "
style = "bold cyan"
format = "$symbol[${ram_pct}]($style)"

[meson]
symbol = "󰔷 "

[nim]
symbol = "󰆥 "

[nix_shell]
symbol = " "
style = "bold blue"

[nodejs]
symbol = " "
format = "[$symbol($version )]($style)"
style = "bold green"
detect_extensions = ["js", "mjs", "cjs", "ts", "tsx"]
detect_files = ["package.json", ".nvmrc"]
detect_folders = ["node_modules"]
not_capable_style = "bold red"

[ocaml]
symbol = " "

[os.symbols]
Alpaquita = " "
Alpine = " "
AlmaLinux = " "
Amazon = " "
Android = " "
Arch = " "
Artix = " "
CachyOS = " "
CentOS = " "
Debian = " "
DragonFly = " "
Emscripten = " "
EndeavourOS = " "
Fedora = " "
FreeBSD = " "
Garuda = "󰛓 "
Gentoo = " "
HardenedBSD = "󰞌 "
Illumos = "󰈸 "
Kali = " "
Linux = " "
Mabox = " "
Macos = " "
Manjaro = " "
Mariner = " "
MidnightBSD = " "
Mint = " "
NetBSD = " "
NixOS = " "
Nobara = " "
OpenBSD = "󰈺 "
openSUSE = " "
OracleLinux = "󰌷 "
Pop = " "
Raspbian = " "
Redhat = " "
RedHatEnterprise = " "
RockyLinux = " "
Redox = "󰀘 "
Solus = "󰠳 "
SUSE = " "
Ubuntu = " "
Unknown = " "
Void = " "
Windows = "󰍲 "

[package]
symbol = "󰏗 "
style = "bold orange"

[cmd_duration]
min_time = 2000
show_milliseconds = false
style = "bold cyan"
format = "󰔟 [$duration]($style)"

[battery]
full_symbol = "󰁹 "
charging_symbol = "󰂄 "
discharging_symbol = "󰂃 "

[[battery.display]]
threshold = 15
style = "bold red"

[[battery.display]]
threshold = 50
style = "bold yellow"

[[battery.display]]
threshold = 80
style = "bold green"

[kubernetes]
symbol = "󱃾 "
style = "bold blue"
format = "[$symbol$context( \\($namespace\\))]($style)"

[perl]
symbol = " "

[php]
symbol = " "

[pijul_channel]
symbol = " "

[pixi]
symbol = "󰏗 "

[python]
symbol = " "
format = '[$symbol($version )(\($virtualenv\) )]($style)'
version_format = "v${raw}"
style = "yellow bold"
pyenv_version_name = true
pyenv_prefix = ""
python_binary = ["./venv/bin/python", "python", "python3", "python2"]
detect_extensions = ["py", "pyi"]
detect_files = [
  ".python-version",
  "Pipfile",
  "requirements.txt",
  "pyproject.toml",
  "tox.ini",
  "setup.py",
  "__init__.py",
  "uv.lock",
  "requirements-dev.txt",
  "Pipfile.lock",
]
detect_folders = [".venv", "venv", "__pycache__"]

[rlang]
symbol = "󰟔 "

[ruby]
symbol = " "

[rust]
symbol = "󱘗 "
format = "[$symbol($version )]($style)"
style = "bold orange"
detect_extensions = ["rs"]
detect_files = ["Cargo.toml"]

[scala]
symbol = " "

[swift]
symbol = " "

[zig]
symbol = " "

[gradle]
symbol = " "

[fill]
symbol = " "

[time]
time_format = "%R"
style = "bold comment"
format = "[$time]($style)"

# --- Missing Advanced Modules --------------------------------------------

[jobs]
symbol = "󰜎 "
style = "bold red"
number_threshold = 1
symbol_threshold = 1
format = "[$symbol$number]($style) "

[env_var]
# Show important environment variables
variable = "SHELL"
default = "unknown shell"
format = "with [$env_value]($style) "
style = "cyan bold"
disabled = true

[sudo]
style = "bold red"
symbol = "󰞀 "
format = "[as $symbol]($style)"

[username]
style_user = "green bold"
style_root = "red bold"
format = "[$user]($style) "
show_always = false

[hostname]
ssh_only = true
ssh_symbol = "󰢹 "
format = "on [$ssh_symbol$hostname]($style) "
style = "green bold"

[shlvl]
format = "[$symbol$shlvl]($style) "
symbol = "󰞷 "
threshold = 2
style = "yellow bold"

[status]
style = "red bold"
symbol = "󰅗 "
success_symbol = ""
not_executable_symbol = "󰗖 "
not_found_symbol = "󰍉 "
sigint_symbol = "󰻿 "
signal_symbol = "󱑖 "
format = '[$symbol$common_meaning$signal_name$maybe_int]($style) '
map_symbol = true

[localip]
ssh_only = true
format = "[$localipv4]($style) "
style = "cyan bold"

[character]
success_symbol = "[❯](bold green)"
error_symbol = "[❯](bold red)"
vimcmd_symbol = "[❮](bold purple)"
vimcmd_replace_one_symbol = "[❮](bold purple)"
vimcmd_replace_symbol = "[❮](bold purple)"
vimcmd_visual_symbol = "[❮](bold yellow)"

[palettes.dracula]
background = "#282a36"
current_line = "#44475a"
foreground = "#f8f8f2"
comment = "#6272a4"
cyan = "#8be9fd"
green = "#50fa7b"
orange = "#ffb86c"
pink = "#ff79c6"
purple = "#bd93f9"
red = "#ff5555"
yellow = "#f1fa8c"

# --- Custom Modules -----------------------------------------------------------

[custom.git_worktree]
command = "git rev-parse --show-toplevel 2>/dev/null | xargs basename"
when = "git rev-parse --is-inside-work-tree 2>/dev/null"
format = "[ $output]($style) "
style = "bold blue"
shell = ["sh"]
disabled = true

[custom.python_venv_path]
command = "basename $VIRTUAL_ENV 2>/dev/null"
when = '[ -n "$VIRTUAL_ENV" ]'
format = "[($output)]($style) "
style = "dim yellow"
shell = ["sh"]
disabled = true
