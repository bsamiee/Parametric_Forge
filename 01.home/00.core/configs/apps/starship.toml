# Title         : starship.toml
# Author        : Bardia Samiee
# Project       : Parametric Forge
# License       : MIT
# Path          : /01.home/00.core/configs/apps/starship.toml
# ----------------------------------------------------------------------------
# Starship prompt configuration with left/right split layout

"$schema" = 'https://starship.rs/config-schema.json'

add_newline = true
command_timeout = 500
scan_timeout = 30
palette = 'dracula'

# Define the overall prompt format with left/right split
format = """
$hostname\
$directory\
$git_branch\
$git_status\
$nix_shell\
$python\
$rust\
$nodejs\
$lua\
$golang\
$haskell\
$ruby\
$package\
$aws\
$docker_context\
$line_break\
$character"""

# Right-side modules
right_format = """$jobs $cmd_duration $time"""

[palettes.dracula]
background = "#282a36"
current_line = "#44475a"
comment = "#9ca0a8"
blue = "#6272a4"
cyan = "#8be9fd"
green = "#50fa7b"
orange = "#ffb86c"
pink = "#ff79c6"
purple = "#bd93f9"
red = "#ff5555"
yellow = "#f1fa8c"
docker = "#06969A"

[directory]
style = 'cyan'
format = '\[[$path]($style)\] '
truncation_length = 3
truncation_symbol = '…/'
truncate_to_repo = false

[directory.substitutions]
'Documents' = '󰈙'
'Downloads' = ' '
'Music' = ' '
'Pictures' = ' '

[git_branch]
style = 'green'
symbol = ' '
format = '[on](comment) \[[$symbol$branch]($style)\] '

[git_status]
style = 'yellow'
format = '([\[$all_status$ahead_behind\]]($style) )'
ahead = "⇡${count}"
behind = "⇣${count}"
diverged = "⇕"
untracked = "?${count}"
stashed = "*${count}"
modified = "!${count}"
staged = "+${count}"
renamed = "»${count}"
deleted = "✘${count}"
conflicted = "=${count}"

[python]
style = 'purple'
symbol = ' '
format = '\[[$symbol($version)]($style)\]'
python_binary = ['python3', 'python', 'python2']

# Lua language indicator
[lua]
symbol = ' '
style = 'purple'
format = '\[[$symbol($version)]($style)\]'

[nodejs]
style = 'purple'
symbol = ' '
format = '\[[$symbol($version)]($style)\]'

[golang]
style = 'purple'
symbol = ' '
format = '\[[$symbol($version)]($style)\]'

[haskell]
style = 'purple'
symbol = ' '
format = '\[[$symbol($version)]($style)\]'

[rust]
style = 'purple'
symbol = ' '
format = '\[[$symbol($version)]($style)\]'

[ruby]
style = 'purple'
symbol = ' '
format = '\[[$symbol($version)]($style)\]'

[package]
style = 'orange'
symbol = ' '
format = '\[[$symbol($version)]($style)\]'

[aws]
style = 'purple'
symbol = ' '
format = '\[[$symbol$profile]($style)\]'

[docker_context]
symbol = ' '
style = 'docker'
format = '\[[$symbol$context]($style)\]'
detect_files = ['docker-compose.yml', 'docker-compose.yaml', 'Dockerfile']
detect_extensions = ['Dockerfile']

[jobs]
symbol = ' '
style = 'red'
number_threshold = 1
format = '\[[$symbol]($style)\]'

[cmd_duration]
min_time = 500
style = 'comment'
format = '\[[$duration]($style)\]'

# Right-side time display
[time]
disabled = false
style = 'comment'
format = '\[[$time]($style)\]'
time_format = '%R'  # 24-hour format HH:MM

# Character prompt indicator
[character]
success_symbol = '[❯](green)'
error_symbol = '[❯](red)'

# Nix shell indicator
[nix_shell]
symbol = '󱄅 '
format = '\[[$symbol$state]($style)\]'
style = 'blue'

# Hostname for SSH sessions
[hostname]
ssh_only = true
format = '\[[$hostname](bold red)\] '
disabled = false