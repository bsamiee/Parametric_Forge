#!/bin/bash
# Title         : yabairc
# Author        : Bardia Samiee
# Project       : Parametric Forge
# License       : MIT
# Path          : /01.home/00.core/configs/apps/yabairc
# ----------------------------------------------------------------------------
# Clean yabai window manager configuration

set -euo pipefail

if ! command -v yabai >/dev/null 2>&1; then
    echo "ERROR: yabai not found in PATH" >&2
    exit 1
fi

echo "yabai: Starting configuration..."

# --- Initialize Companion Tools ---------------------------------------------
echo "yabai: Starting companion UI tools..."

sketchybar &
SKETCHYBAR_PID=$!
sleep 0.2

skhd &
SKHD_PID=$!
sleep 0.1

borders &
BORDERS_PID=$!

echo "yabai: ✓ UI tools started (PIDs: sketchybar=$SKETCHYBAR_PID skhd=$SKHD_PID borders=$BORDERS_PID)"

# --- Scripting Addition -----------------------------------------------------
echo "yabai: Loading scripting addition..."
if sudo --non-interactive yabai --load-sa 2>/dev/null; then
    echo "yabai: ✓ Scripting addition loaded - full feature set available"
    yabai -m signal --add event=dock_did_restart action="sudo yabai --load-sa"
else
    echo "yabai: ! Scripting addition failed - basic mode only" >&2
fi

YABAI_CONFIG_DIR="$HOME/.config/yabai"

# --- Event Signals ----------------------------------------------------------
yabai -m signal --add event=space_created action="yabai -m space --layout bsp; $YABAI_CONFIG_DIR/spacesync.sh"
yabai -m signal --add event=space_destroyed action="$YABAI_CONFIG_DIR/spacesync.sh"
yabai -m signal --add event=space_changed action="$YABAI_CONFIG_DIR/spacesync.sh"
yabai -m signal --add event=display_added action="sleep 2 && $YABAI_CONFIG_DIR/spacesync.sh"
yabai -m signal --add event=display_removed action="sleep 1 && $YABAI_CONFIG_DIR/spacesync.sh"

yabai -m signal --add event=window_focused action="sketchybar --trigger window_focus"
yabai -m signal --add event=window_created action="sketchybar --trigger windows_on_spaces"
yabai -m signal --add event=window_destroyed action="sketchybar --trigger windows_on_spaces"
yabai -m signal --add event=window_moved action="sketchybar --trigger windows_on_spaces"

# --- Core Configuration -----------------------------------------------------
yabai -m config debug_output on

# --- Layout & Spacing -------------------------------------------------------
yabai -m config layout bsp \
                window_placement second_child \
                split_ratio 0.50 \
                auto_balance on

yabai -m config top_padding 4 \
                bottom_padding 4 \
                left_padding 4 \
                right_padding 4 \
                window_gap 4

# --- External Bar Integration -----------------------------------------------
yabai -m config external_bar all:40:0 \
                menubar_opacity 0.0

# --- Initialize Spaces ------------------------------------------------------
SPACE_DATA=$(yabai -m query --spaces)
SPACE_COUNT=$(echo "$SPACE_DATA" | jq length)

while read -r space; do
    yabai -m space "$space" --layout bsp 2>/dev/null || true
done < <(echo "$SPACE_DATA" | jq -r '.[].index')

echo "yabai: ✓ Configured $SPACE_COUNT spaces"

# --- Sync SketchyBar --------------------------------------------------------
if [ -x "$YABAI_CONFIG_DIR/spacesync.sh" ]; then
    "$YABAI_CONFIG_DIR/spacesync.sh"
else
    echo "yabai: ! spacesync.sh not found" >&2
fi

# --- Window Behavior & Appearance -------------------------------------------
yabai -m config window_opacity on \
                window_opacity_duration 0.25 \
                active_window_opacity 0.95 \
                normal_window_opacity 0.80 \
                insert_feedback_color 0xff50fa7b \
                window_shadow float \
                window_animation_duration 0.0 \
                window_zoom_persist on \
                window_origin_display default

yabai -m config focus_follows_mouse off \
                mouse_follows_focus off \
                mouse_modifier alt \
                mouse_action1 move \
                mouse_action2 resize \
                mouse_drop_action swap

# --- Application Rules ------------------------------------------------------
# Standard Center Position (2:2:6:6) - Most system apps
yabai -m rule --add app="^(System Settings|System Preferences|System Information)$" manage=off grid=10:10:2:2:6:6
yabai -m rule --add app="^(Installer|Migration Assistant|Disk Utility)$" manage=off grid=10:10:2:2:6:6
yabai -m rule --add app="^(Dictionary|QuickTime Player|1Password)$" manage=off grid=10:10:2:2:6:6
yabai -m rule --add app="^(CleanShot X|BetterMouse|1Password 7|Hammerspoon)$" manage=off grid=10:10:2:2:6:6
yabai -m rule --add app="^(Font File Browser|Zoom)$" manage=off grid=10:10:2:2:6:6

# Compact Apps (3:3:4:4) - Small utilities
yabai -m rule --add app="^(Archive Utility|Software Update|ColorSync Utility)$" manage=off grid=10:10:3:3:4:4

# Full Screen Apps (1:1:8:8) - Large apps needing space
yabai -m rule --add app="^(Finder|Preview|Karabiner-Elements|BetterTouchTool|Docker Desktop)$" manage=off grid=10:10:1:1:8:8

# Tall Windows (2:1:6:8) - Vertical-oriented apps
yabai -m rule --add app="^Activity Monitor$" manage=off grid=10:10:2:1:6:8

# Corner Positioned - Small persistent tools
yabai -m rule --add app="^Calculator$" manage=off grid=10:10:7:1:3:4
yabai -m rule --add app="^Digital Colormeter$" manage=off grid=10:10:6:2:4:3
yabai -m rule --add app="^(AirBuddy|AlDente)$" manage=off grid=10:10:7:7:3:2

# Side Positioned - Communication apps
yabai -m rule --add app="^Raycast$" manage=off grid=10:10:3:1:4:6
yabai -m rule --add app="^Discord$" manage=off grid=10:10:6:0:4:10
yabai -m rule --add app="^(Telegram|WhatsApp)$" manage=off grid=10:10:7:2:3:6
yabai -m rule --add app="^Spotify$" manage=off grid=10:10:2:7:6:3

# Development Tools
yabai -m rule --add app="^WezTerm$" manage=on
yabai -m rule --add app="^(Simulator|Console|Creative Cloud|Blender)$" manage=off

# Universal Rules
yabai -m rule --add window_type="^(dialog|utility|toolbar|splash)$" manage=off
yabai -m rule --add title="(Preferences|Settings|Options|Configuration|About|Library|Queue)" manage=off
yabai -m rule --add title="^(General|(Tab|Password|Website|Extension)s|AutoFill|Se(arch|curity)|Privacy|Advance)$" manage=off

# --- Validation & Startup ---------------------------------------------------
if yabai -m query --windows >/dev/null 2>&1; then
    echo "yabai: ✓ Configuration loaded ($SPACE_COUNT spaces configured)"

    sleep 0.5
    pgrep -x sketchybar >/dev/null && echo "yabai: ✓ SketchyBar active" || echo "yabai: ! SketchyBar missing" >&2
    pgrep -x skhd >/dev/null && echo "yabai: ✓ skhd active" || echo "yabai: ! skhd missing" >&2
    pgrep -f borders >/dev/null && echo "yabai: ✓ JankyBorders active" || echo "yabai: ! JankyBorders missing" >&2

    sketchybar --trigger yabai_ready 2>/dev/null || true
    sleep 1.0 && yabai -m config window_opacity_duration 0.25
    echo "yabai: ✓ System ready"
else
    echo "yabai: ! Configuration validation failed" >&2
fi

