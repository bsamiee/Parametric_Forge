#!/bin/bash
# Title         : yabairc
# Author        : Bardia Samiee (adapted from josean-dev)
# Project       : Parametric Forge
# License       : MIT
# Path          : /01.home/00.core/configs/apps/yabairc
# ----------------------------------------------------------------------------
# Yabai window manager configuration

# --- Error Handling & Validation -----------------------------------------
set -euo pipefail # Strict bash mode: exit on error, undefined vars, pipe failures

# Validate yabai binary availability (safe during startup)
if ! command -v yabai >/dev/null 2>&1; then
    echo "ERROR: yabai not found in PATH" >&2
    exit 1
fi

# Note: Removed self-referential process check (yabairc runs WITHIN yabai startup)
# Note: Removed query test (yabai isn't ready to accept queries during config load)

echo "yabai: Starting configuration..."

# --- Scripting Addition Setup --------------------------------------------
# Enable advanced window control features (required for borders and opacity)
# Note: Requires passwordless sudo configuration in /private/etc/sudoers.d/yabai
if sudo --non-interactive yabai --load-sa 2>/dev/null; then
    echo "yabai: Scripting addition loaded successfully"
else
    echo "WARNING: Scripting addition failed to load (configure passwordless sudo)" >&2
fi

# Auto-reload scripting addition when dock restarts
yabai -m signal --add event=dock_did_restart action="sudo yabai --load-sa"

# --- Space Creation Signal (Inheritance) --------------------------------
# Ensure new spaces inherit global padding settings
yabai -m signal --add event=space_created action="yabai -m config layout bsp"

# --- SketchyBar Integration Signals -------------------------------------
# Unified state coordination - single JSON file, targeted triggers
yabai -m signal --add event=space_changed action="
    echo '{\"space\":\$YABAI_SPACE_ID,\"window\":\$YABAI_WINDOW_ID,\"event\":\"space\"}' > /tmp/yabai_state.json;
    sketchybar --trigger space_change 2>/dev/null || true"

yabai -m signal --add event=window_focused action="
    echo '{\"space\":\$YABAI_SPACE_ID,\"window\":\$YABAI_WINDOW_ID,\"event\":\"window\"}' > /tmp/yabai_state.json;
    sketchybar --trigger window_focus 2>/dev/null || true"

# --- Core Configuration --------------------------------------------------
# Enable debug output for better troubleshooting (modern best practice)
yabai -m config debug_output on

# --- Layout Configuration ------------------------------------------------
yabai -m config layout bsp
yabai -m config window_placement second_child

# Enforce BSP layout on all existing spaces and cache count
SPACE_DATA=$(yabai -m query --spaces)
SPACE_COUNT=$(echo "$SPACE_DATA" | jq length)
echo "$SPACE_DATA" | jq -r '.[].index' | while read -r space; do
    yabai -m space "$space" --layout bsp 2>/dev/null || true
done

# --- Refined Spacing System (Subtle Proportions) ------------------------
# 4:3 ratio: 4px padding, 3px gaps - cleaner, less intrusive
yabai -m config top_padding 4    # Minimal outer margin
yabai -m config bottom_padding 4 # Consistent perimeter
yabai -m config left_padding 4   # Balanced lateral space
yabai -m config right_padding 4  # Perfect symmetry
yabai -m config window_gap 3     # Inner gap (3/4 ratio)

# Write initial unified state
echo '{"padding":4,"gap":3,"mode":"windowed","space":1,"window":0}' >/tmp/yabai_state.json

# --- External Bar Integration --------------------------------------------
# SketchyBar integration with proper height allocation
yabai -m config external_bar all:32:0 # 32px height, 0px bottom
yabai -m config menubar_opacity 0.0   # Hide native menubar

# --- Window Appearance ---------------------------------------------------
yabai -m config window_border off  # JankyBorders handles this

# Swiss Design Opacity Hierarchy - Clear Information Architecture
yabai -m config window_opacity on
yabai -m config window_opacity_duration 0.18 # Slightly slower for elegance
yabai -m config active_window_opacity 1.0    # Full opacity = primary focus
yabai -m config normal_window_opacity 0.92   # More pronounced hierarchy (8% reduction)

# --- Window Behavior -----------------------------------------------------
yabai -m config split_ratio 0.50 # 50/50 splits for automatic balance
yabai -m config split_type auto
yabai -m config auto_balance on # Automatically resize windows when new ones open
yabai -m config window_shadow on
yabai -m config window_animation_duration 0.0
yabai -m config window_zoom_persist on
yabai -m config window_origin_display default
yabai -m config window_topmost off

# --- Focus & Mouse Settings ----------------------------------------------
# Better terminal cooperation - disabled auto focus
yabai -m config focus_follows_mouse off
yabai -m config mouse_follows_focus off
yabai -m config mouse_modifier alt
yabai -m config mouse_action1 move
yabai -m config mouse_action2 resize
yabai -m config mouse_drop_action swap  # Modern: swap instead of stack for better workflow

# --- Application Rules ---------------------------------------------------
# System Applications
yabai -m rule --add app="^System Settings$" manage=off
yabai -m rule --add app="^System Preferences$" manage=off
yabai -m rule --add app="^Activity Monitor$" manage=off
yabai -m rule --add app="^Archive Utility$" manage=off
yabai -m rule --add app="^Installer$" manage=off
yabai -m rule --add app="^Software Update$" manage=off

# Utilities
yabai -m rule --add app="^Calculator$" manage=off
yabai -m rule --add app="^Dictionary$" manage=off
yabai -m rule --add app="^Karabiner-Elements$" manage=off
yabai -m rule --add app="^QuickTime Player$" manage=off
yabai -m rule --add app="^1Password$" manage=off
yabai -m rule --add app="^Digital Colormeter$" manage=off
yabai -m rule --add app="^KeyShade$" manage=off

# Modern system tools that should float (based on your actual homebrew installs)
yabai -m rule --add app="^Raycast$" manage=off
yabai -m rule --add app="^Bartender 4$" manage=off
yabai -m rule --add app="^CleanShot X$" manage=off
yabai -m rule --add app="^AirBuddy$" manage=off
yabai -m rule --add app="^AlDente Pro$" manage=off
yabai -m rule --add app="^BetterMouse$" manage=off
yabai -m rule --add app="^BetterTouchTool$" manage=off
yabai -m rule --add app="^Docker Desktop$" manage=off
yabai -m rule --add app="^1Password 7$" manage=off

# Development Tools
yabai -m rule --add app="^(Simulator|Console)$" manage=off
yabai -m rule --add app="^WezTerm$" manage=on
yabai -m rule --add app="^(Creative Cloud|Finder)$" manage=off

# Universal preference window detection (consolidates all app-specific rules)
yabai -m rule --add title="(Preferences|Settings|Options|Configuration|About|Library|Queue)" manage=off
yabai -m rule --add title="^(General|(Tab|Password|Website|Extension)s|AutoFill|Se(arch|curity)|Privacy|Advance)$" manage=off

# --- Configuration Validation -------------------------------------------
if yabai -m query --windows >/dev/null 2>&1; then
    echo "yabai: Configuration loaded - Refined spacing + Auto-balance active"
    echo "yabai: $SPACE_COUNT spaces available"
    sketchybar --trigger yabai_ready 2>/dev/null || true
else
    echo "WARNING: Configuration validation failed - running in degraded mode" >&2
fi
