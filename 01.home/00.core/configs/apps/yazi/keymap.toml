# Title         : keymap.toml
# Author        : Bardia Samiee
# Project       : Parametric Forge
# License       : MIT
# Path          : /01.home/00.core/configs/apps/yazi/keymap.toml
# ----------------------------------------------------------------------------
# Essential keymap enhancements - extends defaults via prepend pattern

"$schema" = "https://yazi-rs.github.io/schemas/keymap.json"

[mgr]
prepend_keymap = [
  # Shell integration
  { on = "!", run = "shell --interactive", desc = "Run shell command" },
  { on = "<C-t>", run = '''shell "$SHELL" --block''', desc = "Drop to shell" },

  # Archive operations using verified tools
  { on = [
    "o",
    "x",
  ], run = '''shell '7zz x -y "$@"' --block''', desc = "Extract archive" },
  { on = [
    "o",
    "c",
  ], run = "plugin compress", desc = "Compress selected files" },

  # Git integration (using installed lazygit plugin)
  { on = [
    "g",
    "g",
  ], run = "plugin lazygit", desc = "Open lazygit" },
  { on = [
    "g",
    "d",
  ], run = "plugin diff", desc = "Diff selected with hovered" },
  { on = [
    "g",
    "r",
  ], run = '''shell -- ya emit cd "$(git rev-parse --show-toplevel)"''', desc = "Go to git root" },

  # Clipboard shortcuts (syncs via system-clipboard plugin)
  { on = "<C-c>", run = "yank", desc = "Copy selection" },
  { on = "<C-x>", run = "yank --cut", desc = "Cut selection" },
  { on = "<C-v>", run = "paste", desc = "Paste selection" },

  # Open or create dedicated WezTerm workspace for current directory
  { on = "<C-n>", run = '''shell 'bin="$WEZTERM_UTILS_BIN"; [ -z "$bin" ] && bin=wezterm-utils.sh; "$bin" spawn-workspace "$(basename "$PWD")" "$PWD"' --orphan''', desc = "New WezTerm workspace" },
  { on = "<A-w>", run = "tab_close", desc = "Close current tab (Option+w)" },

  # Smart paste to hovered directory (using installed plugin)
  { on = "p", run = "plugin smart-paste", desc = "Paste to hovered directory" },

  # Toggle pane visibility (using installed plugin)
  { on = "[", run = "plugin toggle-pane min-parent", desc = "Toggle parent pane (left)" },
  { on = "]", run = "plugin toggle-pane min-preview", desc = "Toggle preview pane (right)" },
  { on = "\\", run = "plugin toggle-pane max-current", desc = "Maximize/restore current pane (middle)" },

  # Quick Look preview (macOS)
  { on = "<C-p>", run = 'shell -- qlmanage -p "$@"', desc = "Quick Look preview" },

  # Command palette for discoverability (Left Option+K - terminal-friendly)
  { on = "<A-k>", run = "plugin command-palette", desc = "Open command palette (Left Option+K)" },

  # Smart tab workflows
  { on = "t", run = "plugin smart-tab", desc = "Create tab and enter hovered directory" },

  # Smart switch to tabs (creates if doesn't exist)
  { on = "1", run = "tab_switch 0", desc = "Switch to tab 1" },                 # Built-in for tab 1
  { on = "2", run = "plugin smart-switch 1", desc = "Switch or create tab 2" },
  { on = "3", run = "plugin smart-switch 2", desc = "Switch or create tab 3" },
  { on = "4", run = "plugin smart-switch 3", desc = "Switch or create tab 4" },
  { on = "5", run = "plugin smart-switch 4", desc = "Switch or create tab 5" },
  { on = "6", run = "plugin smart-switch 5", desc = "Switch or create tab 6" },
  { on = "7", run = "plugin smart-switch 6", desc = "Switch or create tab 7" },
  { on = "8", run = "plugin smart-switch 7", desc = "Switch or create tab 8" },
  { on = "9", run = "plugin smart-switch 8", desc = "Switch or create tab 9" },

  # Enhanced navigation - Replace defaults with smarter versions
  { on = "l", run = "plugin bypass smart-enter", desc = "Smart enter (skip single-child dirs)" },
  { on = "h", run = "plugin bypass reverse", desc = "Smart leave (skip single-child parents)" },
  { on = "F", run = "plugin easyjump", desc = "Jump to file/directory with fuzzy search" },
  { on = "H", run = "plugin cdhist", desc = "Navigate directory history" },
  { on = [ "g", "f", ], run = "plugin git-files", desc = "Show only git-tracked files" },
  { on = [ "g", "b", ], run = "plugin whoosh jump_by_key", desc = "Quick bookmarks - all directories and projects" },

  # Trash management (requires: trash-cli)
  { on = [
    "g",
    "t",
  ], run = "plugin recycle-bin open", desc = "Go to trash directory" },
  { on = "u", run = "plugin restore", desc = "Undo last delete (restore most recent)" },
  { on = [
    "R",
    "r",
  ], run = "plugin recycle-bin restore", desc = "Restore selected files from trash" },
  { on = [
    "R",
    "d",
  ], run = "plugin recycle-bin delete", desc = "Permanently delete from trash" },
  { on = [
    "R",
    "e",
  ], run = "plugin recycle-bin empty", desc = "Empty entire trash" },
  { on = [
    "R",
    "D",
  ], run = "plugin recycle-bin emptyDays", desc = "Empty trash older than N days" },

  # macOS tagging (requires: brew install tag)
  { on = [
    "T",
    "a",
  ], run = "plugin mactag add", desc = "Add macOS tags to selected files" },
  { on = [
    "T",
    "r",
  ], run = "plugin mactag remove", desc = "Remove macOS tags from selected files" },

  # Rare sudo operations - Only when regular operations fail
  { on = [
    "S",
    "r",
  ], run = "plugin sudo rename", desc = "Rename with sudo (when permission denied)" },
  { on = [
    "S",
    "p",
  ], run = "plugin sudo paste", desc = "Paste with sudo (when permission denied)" },
]

[input]
prepend_keymap = [
  { on = "<Esc>", run = "close", desc = "Cancel input immediately" },
]
