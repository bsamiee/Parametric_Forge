# Title         : skhdrc
# Author        : Bardia Samiee
# Project       : Parametric Forge
# License       : MIT
# Path          : /01.home/00.core/configs/apps/skhdrc
# ----------------------------------------------------------------------------
# System-level window management via leader keys
# Leaders defined in Karabiner: Hyper (⌘⌥⌃⇧), Super (⌘⌥⌃), Power (⌥⌃⇧)
# shellcheck shell=bash
# shellcheck disable=SC2288,SC2171,SC2211,SC2154,SC2210,SC2238

# --- APPLICATION BLACKLIST --------------------------------------------------
# Apps that handle their own shortcuts or need full keyboard access
.blacklist [
"1Password"
"Activity Monitor"
"System Settings"
"System Preferences"
"Karabiner-Elements"
"Karabiner-EventViewer"
]

# --- Grid definitions -------------------------------------------------------
GRID_FULL="1:1:0:0:1:1"
GRID_LEFT_HALF="1:2:0:0:1:1"
GRID_RIGHT_HALF="1:2:1:0:1:1"
GRID_TOP_HALF="2:1:0:0:1:1"
GRID_BOTTOM_HALF="2:1:0:1:1:1"
GRID_LEFT_THIRD="1:3:0:0:1:1"
GRID_MIDDLE_THIRD="1:3:1:0:1:1"
GRID_RIGHT_THIRD="1:3:2:0:1:1"
GRID_TOP_LEFT_QUARTER="2:2:0:0:1:1"
GRID_TOP_RIGHT_QUARTER="2:2:1:0:1:1"
GRID_BOTTOM_LEFT_QUARTER="2:2:0:1:1:1"
GRID_BOTTOM_RIGHT_QUARTER="2:2:1:1:1:1"
GRID_CENTER="6:6:1:1:4:4"

# --- Floating Window Modal System -------------------------------------------

# Define float mode
:: float @ :

# Enter float mode
shift + cmd - return ; float

# Exit float mode
float < escape ; default
float < return ; default

# Float mode bindings
float < left  : yabai -m window --grid $GRID_LEFT_HALF --manage off ; skhd -k "escape"
float < down  : yabai -m window --grid $GRID_BOTTOM_HALF --manage off ; skhd -k "escape"
float < up    : yabai -m window --grid $GRID_TOP_HALF --manage off ; skhd -k "escape"
float < right : yabai -m window --grid $GRID_RIGHT_HALF --manage off ; skhd -k "escape"

# Thirds
float < q : yabai -m window --grid $GRID_LEFT_THIRD --manage off ; skhd -k "escape"
float < w : yabai -m window --grid $GRID_MIDDLE_THIRD --manage off ; skhd -k "escape"
float < e : yabai -m window --grid $GRID_RIGHT_THIRD --manage off ; skhd -k "escape"

# Quarters
float < 1 : yabai -m window --grid $GRID_TOP_LEFT_QUARTER --manage off ; skhd -k "escape"
float < 2 : yabai -m window --grid $GRID_TOP_RIGHT_QUARTER --manage off ; skhd -k "escape"
float < 3 : yabai -m window --grid $GRID_BOTTOM_LEFT_QUARTER --manage off ; skhd -k "escape"
float < 4 : yabai -m window --grid $GRID_BOTTOM_RIGHT_QUARTER --manage off ; skhd -k "escape"

# Center and full
float < c : yabai -m window --grid $GRID_CENTER --manage off ; skhd -k "escape"
float < f : yabai -m window --grid $GRID_FULL --manage off ; skhd -k "escape"

# --- TIER 0: No leader: simple modifiers ------------------------------------


# --- TIER 1: Powerkey: ctrl + alt + shift -----------------------------------

# Window resizing
ctrl + alt + shift - h : yabai -m window --resize left:-50:0 || yabai -m window --resize right:-50:0
ctrl + alt + shift - j : yabai -m window --resize bottom:0:50 || yabai -m window --resize top:0:50
ctrl + alt + shift - k : yabai -m window --resize top:0:-50 || yabai -m window --resize bottom:0:-50
ctrl + alt + shift - l : yabai -m window --resize right:50:0 || yabai -m window --resize left:50:0

# Window focus - exclude apps that handle their own navigation
ctrl + alt + shift - left [
    "WezTerm" ~
    * : yabai -m window --focus west
]
ctrl + alt + shift - down [
    "WezTerm" ~
    * : yabai -m window --focus south
]
ctrl + alt + shift - up [
    "WezTerm" ~
    * : yabai -m window --focus north
]
ctrl + alt + shift - right [
    "WezTerm" ~
    * : yabai -m window --focus east
]

# Space navigation
ctrl + alt + shift - 1 : yabai -m space --focus 1
ctrl + alt + shift - 2 : yabai -m space --focus 2
ctrl + alt + shift - 3 : yabai -m space --focus 3
ctrl + alt + shift - 4 : yabai -m space --focus 4
ctrl + alt + shift - 5 : yabai -m space --focus 5
ctrl + alt + shift - 6 : yabai -m space --focus 6
ctrl + alt + shift - 7 : yabai -m space --focus 7
ctrl + alt + shift - 8 : yabai -m space --focus 8
ctrl + alt + shift - 9 : yabai -m space --focus 9

# Display focus - NOT BEING USED FOR NOW
# ctrl + alt + shift - s : yabai -m display --focus west
# ctrl + alt + shift - g : yabai -m display --focus east

# --- TIER 2: Superkey: cmd + ctrl + alt -------------------------------------

# Window movement/swapping
cmd + ctrl + alt - left : yabai -m window --swap west
cmd + ctrl + alt - down : yabai -m window --swap south
cmd + ctrl + alt - up : yabai -m window --swap north
cmd + ctrl + alt - right : yabai -m window --swap east

# Move window to space and follow
cmd + ctrl + alt - 1 : yabai -m window --space 1; yabai -m space --focus 1
cmd + ctrl + alt - 2 : yabai -m window --space 2; yabai -m space --focus 2
cmd + ctrl + alt - 3 : yabai -m window --space 3; yabai -m space --focus 3
cmd + ctrl + alt - 4 : yabai -m window --space 4; yabai -m space --focus 4
cmd + ctrl + alt - 5 : yabai -m window --space 5; yabai -m space --focus 5
cmd + ctrl + alt - 6 : yabai -m window --space 6; yabai -m space --focus 6
cmd + ctrl + alt - 7 : yabai -m window --space 7; yabai -m space --focus 7
cmd + ctrl + alt - 8 : yabai -m window --space 8; yabai -m space --focus 8
cmd + ctrl + alt - 9 : yabai -m window --space 9; yabai -m space --focus 9

# Space management
cmd + ctrl + alt - n : \
    yabai -m space --create; \
    index="$(yabai -m query --spaces --display | jq 'map(select(.[\"is-native-fullscreen\"] == false))[-1].index')"; \
    yabai -m space --focus "$index"
cmd + ctrl + alt - d : \
    count="$(yabai -m query --spaces --display | jq 'map(select(.[\"is-native-fullscreen\"] == false)) | length')"; \
    [[ "$count" -gt 1 ]] && yabai -m space --destroy

# Move window to display and follow - NOT BEING USED FOR NOW
# cmd + ctrl + alt - s : yabai -m window --display west; yabai -m display --focus west
# cmd + ctrl + alt - g : yabai -m window --display east; yabai -m display --focus east

# --- TIER 3: Hyperkey: cmd + ctrl + alt + shift -----------------------------

# Space cycling
cmd + ctrl + alt + shift - left : yabai -m space --focus prev || yabai -m space --focus last
cmd + ctrl + alt + shift - right : yabai -m space --focus next || yabai -m space --focus first

# Stack navigation
cmd + ctrl + alt + shift - up : yabai -m window --focus stack.next || yabai -m window --focus next
cmd + ctrl + alt + shift - down : yabai -m window --focus stack.prev || yabai -m window --focus prev

# Window stacking
cmd + ctrl + alt + shift - i : yabai -m window --insert stack

cmd + ctrl + alt + shift - h : yabai -m window --stack west
cmd + ctrl + alt + shift - j : yabai -m window --stack south
cmd + ctrl + alt + shift - k : yabai -m window --stack north
cmd + ctrl + alt + shift - l : yabai -m window --stack east

# Layout controls
cmd + ctrl + alt + shift - r : yabai -m space --rotate 270
cmd + ctrl + alt + shift - x : yabai -m space --mirror x-axis
cmd + ctrl + alt + shift - y : yabai -m space --mirror y-axis

# --- Yabai Related Mode Toggles ---------------------------------------------
# Layout toggle
cmd + ctrl + alt + shift - t : \
    current="$(yabai -m query --spaces --space | jq -r '.type')"; \
    if [[ "$current" == "bsp" ]]; then \
        yabai -m space --layout stack; \
    else \
        yabai -m space --layout bsp; \
    fi; \

# Gaps toggle
cmd + ctrl + alt + shift - g : \
    current="$(yabai -m config top_padding)"; \
    if [[ "$current" == "0" ]]; then \
        yabai -m config top_padding 4; \
        yabai -m config bottom_padding 4; \
        yabai -m config left_padding 4; \
        yabai -m config right_padding 4; \
        yabai -m config window_gap 4; \
        yabai -m config external_bar all:4:4; \
    else \
        yabai -m config top_padding 0; \
        yabai -m config bottom_padding 0; \
        yabai -m config left_padding 0; \
        yabai -m config right_padding 0; \
        yabai -m config window_gap 0; \
        yabai -m config external_bar all:0:0; \
    fi; \

# Mouse drop mode toggle
cmd + ctrl + alt + shift - m : \
    current="$(yabai -m config mouse_drop_action)"; \
    if [[ "$current" == "swap" ]]; then \
        yabai -m config mouse_drop_action stack; \
    else \
        yabai -m config mouse_drop_action swap; \
    fi; \

# Opacity toggle
cmd + ctrl + alt + shift - o : \
    current="$(yabai -m config window_opacity)"; \
    if [[ "$current" == "on" ]]; then \
        yabai -m config window_opacity off; \
    else \
        yabai -m config window_opacity on; \
    fi; \
