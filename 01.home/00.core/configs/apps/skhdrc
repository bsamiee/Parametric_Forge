# Title         : skhdrc
# Author        : Bardia Samiee
# Project       : Parametric Forge
# License       : MIT
# Path          : /01.home/00.core/configs/apps/skhdrc
# ----------------------------------------------------------------------------
# System-level window management via leader keys
# Leaders defined in Karabiner: Hyper (⌘⌥⌃⇧), Super (⌘⌥⌃), Power (⌥⌃⇧)
# State/feedback handled by Hammerspoon via yabai signals

# --- APPLICATION BLACKLIST -------------------------------------------------
# Apps that handle their own shortcuts or need full keyboard access
.blacklist [
"1Password"
"Activity Monitor"
"System Settings"
"System Preferences"
"Karabiner-Elements"
"Karabiner-EventViewer"
]

# --- TIER 1: Daily Navigation (Simple modifiers) --------------------------
# Window focus - exclude apps that handle their own navigation
ctrl + lalt - left [
    "WezTerm" ~
    "Code" ~
    "Visual Studio Code" ~
    "IntelliJ IDEA" ~
    * : "$HOME/.config/yabai/run-yabai.sh" -m window --focus west
]

ctrl + lalt - down [
    "WezTerm" ~
    "Code" ~
    "Visual Studio Code" ~
    "IntelliJ IDEA" ~
    * : "$HOME/.config/yabai/run-yabai.sh" -m window --focus south
]

ctrl + lalt - up [
    "WezTerm" ~
    "Code" ~
    "Visual Studio Code" ~
    "IntelliJ IDEA" ~
    * : "$HOME/.config/yabai/run-yabai.sh" -m window --focus north
]

ctrl + lalt - right [
    "WezTerm" ~
    "Code" ~
    "Visual Studio Code" ~
    "IntelliJ IDEA" ~
    * : "$HOME/.config/yabai/run-yabai.sh" -m window --focus east
]

# Display focus
lalt - s : "$HOME/.config/yabai/run-yabai.sh" -m display --focus west
lalt - g : "$HOME/.config/yabai/run-yabai.sh" -m display --focus east

# Space navigation
lalt - tab : "$HOME/.config/yabai/run-yabai.sh" -m space --focus recent
lalt - 1 : "$HOME/.config/yabai/run-yabai.sh" -m space --focus 1
lalt - 2 : "$HOME/.config/yabai/run-yabai.sh" -m space --focus 2
lalt - 3 : "$HOME/.config/yabai/run-yabai.sh" -m space --focus 3
lalt - 4 : "$HOME/.config/yabai/run-yabai.sh" -m space --focus 4
lalt - 5 : "$HOME/.config/yabai/run-yabai.sh" -m space --focus 5
lalt - 6 : "$HOME/.config/yabai/run-yabai.sh" -m space --focus 6
lalt - 7 : "$HOME/.config/yabai/run-yabai.sh" -m space --focus 7
lalt - 8 : "$HOME/.config/yabai/run-yabai.sh" -m space --focus 8
lalt - 9 : "$HOME/.config/yabai/run-yabai.sh" -m space --focus 9

# Space cycling
lalt - left : "$HOME/.config/yabai/run-yabai.sh" -m space --focus prev || "$HOME/.config/yabai/run-yabai.sh" -m space --focus last
lalt - right : "$HOME/.config/yabai/run-yabai.sh" -m space --focus next || "$HOME/.config/yabai/run-yabai.sh" -m space --focus first

# --- TIER 2: Power Operations (Super = ⌘⌥⌃) -------------------------------
# Move window to space and follow
cmd + ctrl + alt - 1 : "$HOME/.config/yabai/run-yabai.sh" -m window --space 1; "$HOME/.config/yabai/run-yabai.sh" -m space --focus 1
cmd + ctrl + alt - 2 : "$HOME/.config/yabai/run-yabai.sh" -m window --space 2; "$HOME/.config/yabai/run-yabai.sh" -m space --focus 2
cmd + ctrl + alt - 3 : "$HOME/.config/yabai/run-yabai.sh" -m window --space 3; "$HOME/.config/yabai/run-yabai.sh" -m space --focus 3
cmd + ctrl + alt - 4 : "$HOME/.config/yabai/run-yabai.sh" -m window --space 4; "$HOME/.config/yabai/run-yabai.sh" -m space --focus 4
cmd + ctrl + alt - 5 : "$HOME/.config/yabai/run-yabai.sh" -m window --space 5; "$HOME/.config/yabai/run-yabai.sh" -m space --focus 5
cmd + ctrl + alt - 6 : "$HOME/.config/yabai/run-yabai.sh" -m window --space 6; "$HOME/.config/yabai/run-yabai.sh" -m space --focus 6
cmd + ctrl + alt - 7 : "$HOME/.config/yabai/run-yabai.sh" -m window --space 7; "$HOME/.config/yabai/run-yabai.sh" -m space --focus 7
cmd + ctrl + alt - 8 : "$HOME/.config/yabai/run-yabai.sh" -m window --space 8; "$HOME/.config/yabai/run-yabai.sh" -m space --focus 8
cmd + ctrl + alt - 9 : "$HOME/.config/yabai/run-yabai.sh" -m window --space 9; "$HOME/.config/yabai/run-yabai.sh" -m space --focus 9

# Window movement/swapping
cmd + ctrl + alt - left : "$HOME/.config/yabai/run-yabai.sh" -m window --swap west
cmd + ctrl + alt - down : "$HOME/.config/yabai/run-yabai.sh" -m window --swap south
cmd + ctrl + alt - up : "$HOME/.config/yabai/run-yabai.sh" -m window --swap north
cmd + ctrl + alt - right : "$HOME/.config/yabai/run-yabai.sh" -m window --swap east

# Window resizing
cmd + ctrl + alt - h : "$HOME/.config/yabai/run-yabai.sh" -m window --resize left:-50:0 || "$HOME/.config/yabai/run-yabai.sh" -m window --resize right:-50:0
cmd + ctrl + alt - j : "$HOME/.config/yabai/run-yabai.sh" -m window --resize bottom:0:50 || "$HOME/.config/yabai/run-yabai.sh" -m window --resize top:0:50
cmd + ctrl + alt - k : "$HOME/.config/yabai/run-yabai.sh" -m window --resize top:0:-50 || "$HOME/.config/yabai/run-yabai.sh" -m window --resize bottom:0:-50
cmd + ctrl + alt - l : "$HOME/.config/yabai/run-yabai.sh" -m window --resize right:50:0 || "$HOME/.config/yabai/run-yabai.sh" -m window --resize left:50:0

# Move window to display and follow
cmd + ctrl + alt - s : "$HOME/.config/yabai/run-yabai.sh" -m window --display west; "$HOME/.config/yabai/run-yabai.sh" -m display --focus west
cmd + ctrl + alt - g : "$HOME/.config/yabai/run-yabai.sh" -m window --display east; "$HOME/.config/yabai/run-yabai.sh" -m display --focus east

# --- TIER 3: Layout Management (Hyper = ⌘⌥⌃⇧) -----------------------------
# Layout controls
cmd + ctrl + alt + shift - t : \
    current=$("$HOME/.config/yabai/run-yabai.sh" -m query --spaces --space | jq -r '.type'); \
    if [[ "$current" == "bsp" ]]; then \
        "$HOME/.config/yabai/run-yabai.sh" -m space --layout stack; \
    else \
        "$HOME/.config/yabai/run-yabai.sh" -m space --layout bsp; \
    fi; \
    idx=$("$HOME/.config/yabai/run-yabai.sh" -m query --spaces --space | jq -r '.index // 0' 2>/dev/null || printf '0'); \
    mode=$("$HOME/.config/yabai/run-yabai.sh" -m query --spaces --space | jq -r '.type // "?"' 2>/dev/null || printf '?'); \
    label=$("$HOME/.config/yabai/run-yabai.sh" -m query --spaces --space | jq -r '.label // ""' 2>/dev/null || printf ''); \
    gaps=$("$HOME/.config/yabai/run-yabai.sh" -m config top_padding | tr -d '\n' 2>/dev/null || printf '0'); \
    drop=$("$HOME/.config/yabai/run-yabai.sh" -m config mouse_drop_action | tr -d '\n' 2>/dev/null || printf 'swap'); [ -z "$drop" ] && drop=swap; \
    op=$("$HOME/.config/yabai/run-yabai.sh" -m config window_opacity | tr -d '\n' 2>/dev/null || printf 'off'); [ -z "$op" ] && op=off; \
    sa=no; [ -d /Library/ScriptingAdditions/yabai.osax ] && sa=yes; \
    printf '{"mode":"%s","idx":%s,"label":"%s","gaps":%s,"drop":"%s","opacity":"%s","sa":"%s"}\n' "$mode" "$idx" "$label" "$gaps" "$drop" "$op" "$sa" > ${TMPDIR:-/tmp}/yabai_state.json
cmd + ctrl + alt + shift - r : "$HOME/.config/yabai/run-yabai.sh" -m space --rotate 270
cmd + ctrl + alt + shift - x : "$HOME/.config/yabai/run-yabai.sh" -m space --mirror x-axis
cmd + ctrl + alt + shift - y : "$HOME/.config/yabai/run-yabai.sh" -m space --mirror y-axis

# Gaps toggle
cmd + ctrl + alt + shift - space : \
    current=$("$HOME/.config/yabai/run-yabai.sh" -m config top_padding); \
    if [[ "$current" == "0" ]]; then \
        "$HOME/.config/yabai/run-yabai.sh" -m config top_padding 4; \
        "$HOME/.config/yabai/run-yabai.sh" -m config bottom_padding 4; \
        "$HOME/.config/yabai/run-yabai.sh" -m config left_padding 4; \
        "$HOME/.config/yabai/run-yabai.sh" -m config right_padding 4; \
        "$HOME/.config/yabai/run-yabai.sh" -m config window_gap 4; \
        "$HOME/.config/yabai/run-yabai.sh" -m config external_bar all:4:4; \
    else \
        "$HOME/.config/yabai/run-yabai.sh" -m config top_padding 0; \
        "$HOME/.config/yabai/run-yabai.sh" -m config bottom_padding 0; \
        "$HOME/.config/yabai/run-yabai.sh" -m config left_padding 0; \
        "$HOME/.config/yabai/run-yabai.sh" -m config right_padding 0; \
        "$HOME/.config/yabai/run-yabai.sh" -m config window_gap 0; \
        "$HOME/.config/yabai/run-yabai.sh" -m config external_bar all:0:0; \
    fi; \
    idx=$("$HOME/.config/yabai/run-yabai.sh" -m query --spaces --space | jq -r '.index // 0' 2>/dev/null || printf '0'); \
    mode=$("$HOME/.config/yabai/run-yabai.sh" -m query --spaces --space | jq -r '.type // "?"' 2>/dev/null || printf '?'); \
    label=$("$HOME/.config/yabai/run-yabai.sh" -m query --spaces --space | jq -r '.label // ""' 2>/dev/null || printf ''); \
    gaps=$("$HOME/.config/yabai/run-yabai.sh" -m config top_padding | tr -d '\n' 2>/dev/null || printf '0'); \
    drop=$("$HOME/.config/yabai/run-yabai.sh" -m config mouse_drop_action | tr -d '\n' 2>/dev/null || printf 'swap'); [ -z "$drop" ] && drop=swap; \
    op=$("$HOME/.config/yabai/run-yabai.sh" -m config window_opacity | tr -d '\n' 2>/dev/null || printf 'off'); [ -z "$op" ] && op=off; \
    sa=no; [ -d /Library/ScriptingAdditions/yabai.osax ] && sa=yes; \
    printf '{"mode":"%s","idx":%s,"label":"%s","gaps":%s,"drop":"%s","opacity":"%s","sa":"%s"}\n' "$mode" "$idx" "$label" "$gaps" "$drop" "$op" "$sa" > ${TMPDIR:-/tmp}/yabai_state.json

# Mouse drop mode toggle
cmd + ctrl + alt + shift - m : \
    current=$("$HOME/.config/yabai/run-yabai.sh" -m config mouse_drop_action); \
    if [[ "$current" == "swap" ]]; then \
        "$HOME/.config/yabai/run-yabai.sh" -m config mouse_drop_action stack; \
    else \
        "$HOME/.config/yabai/run-yabai.sh" -m config mouse_drop_action swap; \
    fi; \
    idx=$("$HOME/.config/yabai/run-yabai.sh" -m query --spaces --space | jq -r '.index // 0' 2>/dev/null || printf '0'); \
    mode=$("$HOME/.config/yabai/run-yabai.sh" -m query --spaces --space | jq -r '.type // "?"' 2>/dev/null || printf '?'); \
    label=$("$HOME/.config/yabai/run-yabai.sh" -m query --spaces --space | jq -r '.label // ""' 2>/dev/null || printf ''); \
    gaps=$("$HOME/.config/yabai/run-yabai.sh" -m config top_padding | tr -d '\n' 2>/dev/null || printf '0'); \
    drop=$("$HOME/.config/yabai/run-yabai.sh" -m config mouse_drop_action | tr -d '\n' 2>/dev/null || printf 'swap'); [ -z "$drop" ] && drop=swap; \
    op=$("$HOME/.config/yabai/run-yabai.sh" -m config window_opacity | tr -d '\n' 2>/dev/null || printf 'off'); [ -z "$op" ] && op=off; \
    sa=no; [ -d /Library/ScriptingAdditions/yabai.osax ] && sa=yes; \
    printf '{"mode":"%s","idx":%s,"label":"%s","gaps":%s,"drop":"%s","opacity":"%s","sa":"%s"}\n' "$mode" "$idx" "$label" "$gaps" "$drop" "$op" "$sa" > ${TMPDIR:-/tmp}/yabai_state.json

# Opacity toggle (parity with menubar) 
cmd + ctrl + alt + shift - o : \
    current=$("$HOME/.config/yabai/run-yabai.sh" -m config window_opacity); \
    if [[ "$current" == "on" ]]; then \
        "$HOME/.config/yabai/run-yabai.sh" -m config window_opacity off; \
    else \
        "$HOME/.config/yabai/run-yabai.sh" -m config window_opacity on; \
    fi; \
    idx=$("$HOME/.config/yabai/run-yabai.sh" -m query --spaces --space | jq -r '.index // 0' 2>/dev/null || printf '0'); \
    mode=$("$HOME/.config/yabai/run-yabai.sh" -m query --spaces --space | jq -r '.type // "?"' 2>/dev/null || printf '?'); \
    label=$("$HOME/.config/yabai/run-yabai.sh" -m query --spaces --space | jq -r '.label // ""' 2>/dev/null || printf ''); \
    gaps=$("$HOME/.config/yabai/run-yabai.sh" -m config top_padding | tr -d '\n' 2>/dev/null || printf '0'); \
    drop=$("$HOME/.config/yabai/run-yabai.sh" -m config mouse_drop_action | tr -d '\n' 2>/dev/null || printf 'swap'); [ -z "$drop" ] && drop=swap; \
    op=$("$HOME/.config/yabai/run-yabai.sh" -m config window_opacity | tr -d '\n' 2>/dev/null || printf 'off'); [ -z "$op" ] && op=off; \
    sa=no; [ -d /Library/ScriptingAdditions/yabai.osax ] && sa=yes; \
    printf '{"mode":"%s","idx":%s,"label":"%s","gaps":%s,"drop":"%s","opacity":"%s","sa":"%s"}\n' "$mode" "$idx" "$label" "$gaps" "$drop" "$op" "$sa" > ${TMPDIR:-/tmp}/yabai_state.json

# Window stacking
cmd + ctrl + alt + shift - w : "$HOME/.config/yabai/run-yabai.sh" -m window --stack north
cmd + ctrl + alt + shift - s : "$HOME/.config/yabai/run-yabai.sh" -m window --stack south
cmd + ctrl + alt + shift - a : "$HOME/.config/yabai/run-yabai.sh" -m window --stack west
cmd + ctrl + alt + shift - d : "$HOME/.config/yabai/run-yabai.sh" -m window --stack east
cmd + ctrl + alt + shift - i : "$HOME/.config/yabai/run-yabai.sh" -m window --insert stack

# --- UTILITY OPERATIONS ---------------------------------------------------
# Stack navigation
lalt - n : "$HOME/.config/yabai/run-yabai.sh" -m window --focus stack.next || "$HOME/.config/yabai/run-yabai.sh" -m window --focus next
lalt - p : "$HOME/.config/yabai/run-yabai.sh" -m window --focus stack.prev || "$HOME/.config/yabai/run-yabai.sh" -m window --focus prev

# Float window and center
shift + lalt - space : "$HOME/.config/yabai/run-yabai.sh" -m window --toggle float; "$HOME/.config/yabai/run-yabai.sh" -m window --grid 4:4:1:1:2:2

# Space management
cmd + alt - n : \
    "$HOME/.config/yabai/run-yabai.sh" -m space --create; \
    index=$("$HOME/.config/yabai/run-yabai.sh" -m query --spaces --display | jq 'map(select(.["is-native-fullscreen"] == false))[-1].index'); \
    "$HOME/.config/yabai/run-yabai.sh" -m space --focus "$index"
cmd + alt - d : \
    count=$("$HOME/.config/yabai/run-yabai.sh" -m query --spaces --display | jq 'map(select(.["is-native-fullscreen"] == false)) | length'); \
    [[ "$count" -gt 1 ]] && "$HOME/.config/yabai/run-yabai.sh" -m space --destroy

# --- HAMMERSPOON INTEGRATION ----------------------------------------------
# Window chooser palettes
cmd + alt - p : open -g "hammerspoon://forge/palette/windows"
cmd + alt - o : open -g "hammerspoon://forge/palette/windowsSpace"
cmd + alt - y : open -g "hammerspoon://forge/palette/main"

# Quick actions
shift + lalt - p : open -g "hammerspoon://forge/palette/main"
shift + lalt - r : "$HOME/.config/yabai/run-yabai.sh" -m space --rotate 270