# Title         : 01.home/activation.nix
# Author        : Bardia Samiee
# Project       : Parametric Forge
# License       : MIT
# Path          : /01.home/activation.nix
# ----------------------------------------------------------------------------
# Home activation scripts for 1Password secrets and XDG template generation.

{
  config,
  lib,
  context,
  pkgs,
  ...
}:

{
  # --- Home Activation Scripts ----------------------------------------------
  home.activation = {
    # --- Yazi Plugin Installation --------------------------------------------
    yaziPlugins = lib.hm.dag.entryAfter [ "installPackages" ] ''
      # Run the yazi plugin setup script (auto-deployed to PATH via file-management.nix)
      if command -v yazi-setup-plugins.sh >/dev/null 2>&1; then
        echo "[Yazi] Running plugin setup script..."
        yazi-setup-plugins.sh install
      else
        echo "[Yazi] Plugin setup script not found - ensure system rebuild completed"
      fi
    '';

    # --- SQLite Extensions Setup --------------------------------------------
    sqliteExtensions = lib.hm.dag.entryAfter [ "createXdgDirs" ] ''
      # Install sqlean (not in nixpkgs)
      if [ ! -f "$HOME/.local/lib/sqlean/uuid.dylib" ]; then
        echo "[SQLite] Installing sqlean extensions..."
        ${lib.optionalString context.isDarwin ''
          ARCH=$([ "$(uname -m)" = "arm64" ] && echo "aarch64" || echo "x86_64")
          curl -sL "https://github.com/nalgeon/sqlean/releases/latest/download/sqlean-macos-$ARCH.zip" \
            | tar -xz -C "$HOME/.local/lib/sqlean" --strip-components=0 2>/dev/null || echo "  [WARN] Manual install required"
        ''}
      fi
      # Link sqlite-vec (from nixpkgs)
      mkdir -p "$HOME/.local/lib/sqlite-vec"
      if [ -f "${pkgs.sqlite-vec}/lib/vec0.dylib" ]; then
        ln -sf "${pkgs.sqlite-vec}/lib/vec0.dylib" "$HOME/.local/lib/sqlite-vec/vec0.dylib"
        echo "    [OK] sqlite-vec linked from Nix store"
      elif [ -f "${pkgs.sqlite-vec}/lib/sqlite-vec.dylib" ]; then
        ln -sf "${pkgs.sqlite-vec}/lib/sqlite-vec.dylib" "$HOME/.local/lib/sqlite-vec/vec0.dylib"
        echo "    [OK] sqlite-vec linked from Nix store (alternative name)"
      else
        echo "    [WARN] sqlite-vec not found in expected locations"
      fi
      # Link libspatialite
      ln -sf "${pkgs.libspatialite}/lib/mod_spatialite.dylib" "$HOME/.local/lib/mod_spatialite.dylib" 2>/dev/null || true
    '';

  };
  # --- XDG Config Files -----------------------------------------------------
  xdg.configFile."op/env.template" = {
    text = ''
      # 1Password Secret References Template
      # Generated by Parametric Forge
      # Use with: op run --env-file=~/.config/op/env.template -- <command>

      ${lib.concatStringsSep "\n" (lib.mapAttrsToList (name: ref: "${name}=${ref}") config.secrets.environment)}
    '';
    onChange = ''
      echo "[Parametric Forge] Updated 1Password environment template"
      echo "  Location: ${config.secrets.paths.template}"
      echo "  Secrets configured: ${toString (builtins.length (builtins.attrNames config.secrets.environment))}"
    '';
  };

}
